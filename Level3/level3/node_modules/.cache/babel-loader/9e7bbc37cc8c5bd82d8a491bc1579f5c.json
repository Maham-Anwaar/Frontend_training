{"ast":null,"code":"const listReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'INCREMENT_COUNT':\n      {\n        state.map(item => {\n          if (item.name === action.payload.name) item.amount += 1;\n        });\n        return [...state];\n      }\n\n    case 'DECREMENT_COUNT':\n      {\n        let remove = 0;\n        state.map(item => {\n          if (item.name === action.payload.name) {\n            item.amount -= 1;\n            if (item.amount === 0) remove = state.filter(x => x !== item);\n          }\n        });\n        if (remove) return [...remove];\n        return [...state];\n      }\n\n    case 'ADD_OBJ_TO_LIST':\n      {\n        // adds obj to list, but if it already exists then it just increments amount :D\n        let changed = 0;\n        state.map(item => {\n          if (item.name === action.payload.name) {\n            item.amount += 1;\n            changed = 1;\n          }\n        });\n        if (changed) return [...state];\n        return [...state, action.payload];\n      }\n  }\n};\n\nexport default listReducer;","map":{"version":3,"sources":["/Users/mappletechnologies/Desktop/Frontend_Training/Level_3/level3/src/myRedux/reducers.js"],"names":["listReducer","state","action","type","map","item","name","payload","amount","remove","filter","x","changed"],"mappings":"AAAA,MAAMA,WAAW,GAAG,YAAsB;AAAA,MAArBC,KAAqB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AAAuB;AACnBF,QAAAA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACZ,cAAGA,IAAI,CAACC,IAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,IAA9B,EAAsCD,IAAI,CAACG,MAAL,IAAa,CAAb;AACzC,SAFD;AAGA,eAAO,CAAC,GAAGP,KAAJ,CAAP;AACH;;AACD,SAAK,iBAAL;AAAuB;AACnB,YAAIQ,MAAM,GAAG,CAAb;AACAR,QAAAA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACZ,cAAGA,IAAI,CAACC,IAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,IAA9B,EAAmC;AAC/BD,YAAAA,IAAI,CAACG,MAAL,IAAa,CAAb;AACA,gBAAGH,IAAI,CAACG,MAAL,KAAc,CAAjB,EACIC,MAAM,GAAGR,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAEA,CAAC,KAAGN,IAApB,CAAT;AACP;AACJ,SAND;AAOA,YAAGI,MAAH,EAAW,OAAO,CAAC,GAAGA,MAAJ,CAAP;AACX,eAAO,CAAC,GAAGR,KAAJ,CAAP;AACH;;AACD,SAAK,iBAAL;AAAuB;AACnB;AACA,YAAIW,OAAO,GAAG,CAAd;AACAX,QAAAA,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAE;AACZ,cAAGA,IAAI,CAACC,IAAL,KAAYJ,MAAM,CAACK,OAAP,CAAeD,IAA9B,EAAmC;AAC/BD,YAAAA,IAAI,CAACG,MAAL,IAAa,CAAb;AACAI,YAAAA,OAAO,GAAG,CAAV;AACH;AACJ,SALD;AAMA,YAAGA,OAAH,EAAY,OAAO,CAAC,GAAGX,KAAJ,CAAP;AACZ,eAAO,CAAC,GAAGA,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;AAEH;AA/BL;AAiCH,CAlCD;;AAoCA,eAAeP,WAAf","sourcesContent":["const listReducer = (state=[], action) => {\n    switch (action.type){\n        case 'INCREMENT_COUNT':{\n            state.map(item=>{\n                if(item.name===action.payload.name)   item.amount+=1;\n            })\n            return [...state]\n        }\n        case 'DECREMENT_COUNT':{\n            let remove = 0;\n            state.map(item=>{\n                if(item.name===action.payload.name){\n                    item.amount-=1;\n                    if(item.amount===0)\n                        remove = state.filter(x=>x!==item)\n                }\n            })\n            if(remove) return [...remove]\n            return [...state]\n        }\n        case 'ADD_OBJ_TO_LIST':{\n            // adds obj to list, but if it already exists then it just increments amount :D\n            let changed = 0;\n            state.map(item=>{\n                if(item.name===action.payload.name){\n                    item.amount+=1;\n                    changed = 1;\n                }\n            })\n            if(changed) return [...state]\n            return [...state, action.payload]\n            \n        }\n    }\n}\n\nexport default listReducer\n\n\n"]},"metadata":{},"sourceType":"module"}